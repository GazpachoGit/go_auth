services:
  postgres:
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=mydb
    ports:
      - '6432:5432' # Host:Container
    volumes:
      - ./init_db:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d mydb']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G

  pgadmin:
    #under the hood it will create a DNS name(postgres) for the postgres container. Cause  pgadmin is also running inside a container (and docker compose creates a networks), you must use 'postgres' as a hostname (not localhost) when you add a server connection in pgadmin

    #From a client on your host machine: host: localhost, port: 5432
    #From a Docker container on the same Docker network: host: postgres, port: 5432
    image: dpage/pgadmin4:8.3
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@mail.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - '8080:80'
    depends_on:
      postgres:
        condition: service_healthy # pgAdmin starts *after* Postgres is healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
  pgadmin_data:
